{"ast":null,"code":"import { GET_POKEMONS, GET_ALL_TYPES, FILTER_CREATED, ORDER_NAME, FILTER_TYPE, ORDER_STR, GET_POKEMON_NAME, POST_POKEMON, GET_DETAILS, CLEAN_DETAIL, CLEAN_POKEMONS } from \"../actions\";\nconst initialState = {\n  pokemons: [],\n  allPokemons: [],\n  types: [],\n  pokeDetail: []\n};\nconst rootReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n  switch (action.type) {\n    case GET_POKEMONS:\n      return {\n        ...state,\n        pokemons: action.payload,\n        allPokemons: action.payload\n      };\n    case CLEAN_POKEMONS:\n      return {\n        ...state,\n        pokemons: action.payload\n      };\n    case GET_ALL_TYPES:\n      return {\n        ...state,\n        types: action.payload\n      };\n    case FILTER_CREATED:\n      let copy = state.allPokemons;\n      let createdFiltered;\n      if (action.payload === \"created\") {\n        createdFiltered = copy.filter(e => e.createdInBd);\n      } else if (action.payload === \"api\") {\n        createdFiltered = copy.filter(e => !e.createdInBd);\n      } else {\n        createdFiltered = copy;\n      }\n      return {\n        ...state,\n        pokemons: createdFiltered\n      };\n    case FILTER_TYPE:\n      let copyTwo = state.pokemons;\n      let typeFiltered = action.payload === \"all\" ? copyTwo : copyTwo.filter(e => e.types.some(e => e.name === action.payload));\n      if (typeFiltered.length <= 0) {\n        typeFiltered = copyTwo;\n        alert(\"There are no pokemon of the indicated type\");\n      }\n      return {\n        ...state,\n        pokemons: typeFiltered\n      };\n    case ORDER_NAME:\n      let copy3 = state.pokemons;\n      let sortedName = action.payload === \"asc\" ? copy3.sort((a, b) => {\n        return a.name.toLowerCase().localeCompare(b.name.toLowerCase());\n      }) : copy3.sort((a, b) => {\n        return b.name.toLowerCase().localeCompare(a.name.toLowerCase());\n      });\n      return {\n        ...state,\n        pokemons: sortedName\n      };\n    case ORDER_STR:\n      let copy4 = state.pokemons;\n      let sortedStr = action.payload === \"asc\" ? copy4.sort((a, b) => a.attack - b.attack) : copy4.sort((a, b) => b.attack - a.attack);\n      // console.table(sortedStr);\n      return {\n        ...state,\n        pokemons: sortedStr\n      };\n    case GET_POKEMON_NAME:\n      return {\n        ...state,\n        pokemons: action.payload\n      };\n    case GET_DETAILS:\n      return {\n        ...state,\n        pokeDetail: action.payload\n      };\n    case CLEAN_DETAIL:\n      return {\n        ...state,\n        pokeDetail: action.payload\n      };\n    case POST_POKEMON:\n      return {\n        ...state\n      };\n    default:\n      return {\n        ...state\n      };\n  }\n};\nexport default rootReducer;","map":{"version":3,"names":["GET_POKEMONS","GET_ALL_TYPES","FILTER_CREATED","ORDER_NAME","FILTER_TYPE","ORDER_STR","GET_POKEMON_NAME","POST_POKEMON","GET_DETAILS","CLEAN_DETAIL","CLEAN_POKEMONS","initialState","pokemons","allPokemons","types","pokeDetail","rootReducer","state","action","type","payload","copy","createdFiltered","filter","e","createdInBd","copyTwo","typeFiltered","some","name","length","alert","copy3","sortedName","sort","a","b","toLowerCase","localeCompare","copy4","sortedStr","attack"],"sources":["C:/Users/ADMIN/Downloads/PI-Pokemon-main/client/src/reducer/index.js"],"sourcesContent":["import {\r\n  GET_POKEMONS,\r\n  GET_ALL_TYPES,\r\n  FILTER_CREATED,\r\n  ORDER_NAME,\r\n  FILTER_TYPE,\r\n  ORDER_STR,\r\n  GET_POKEMON_NAME,\r\n  POST_POKEMON,\r\n  GET_DETAILS,\r\n  CLEAN_DETAIL,\r\n  CLEAN_POKEMONS,\r\n} from \"../actions\";\r\n\r\nconst initialState = {\r\n  pokemons: [],\r\n  allPokemons: [],\r\n  types: [],\r\n  pokeDetail: [],\r\n};\r\n\r\nconst rootReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case GET_POKEMONS:\r\n      return {\r\n        ...state,\r\n        pokemons: action.payload,\r\n        allPokemons: action.payload,\r\n      };\r\n    case CLEAN_POKEMONS:\r\n      return {\r\n        ...state,\r\n        pokemons: action.payload,\r\n      };\r\n    case GET_ALL_TYPES:\r\n      return {\r\n        ...state,\r\n        types: action.payload,\r\n      };\r\n    case FILTER_CREATED:\r\n      let copy = state.allPokemons;\r\n      let createdFiltered;\r\n      if (action.payload === \"created\") {\r\n        createdFiltered = copy.filter((e) => e.createdInBd);\r\n      } else if (action.payload === \"api\") {\r\n        createdFiltered = copy.filter((e) => !e.createdInBd);\r\n      } else {\r\n        createdFiltered = copy;\r\n      }\r\n      return {\r\n        ...state,\r\n        pokemons: createdFiltered,\r\n      };\r\n    case FILTER_TYPE:\r\n      let copyTwo = state.pokemons;\r\n      let typeFiltered =\r\n        action.payload === \"all\"\r\n          ? copyTwo\r\n          : copyTwo.filter((e) =>\r\n              e.types.some((e) => e.name === action.payload)\r\n            );\r\n      if (typeFiltered.length <= 0) {\r\n        typeFiltered = copyTwo;\r\n        alert(\"There are no pokemon of the indicated type\");\r\n      }\r\n      return {\r\n        ...state,\r\n        pokemons: typeFiltered,\r\n      };\r\n    case ORDER_NAME:\r\n      let copy3 = state.pokemons;\r\n      let sortedName =\r\n        action.payload === \"asc\"\r\n          ? copy3.sort((a, b) => {\r\n              return a.name.toLowerCase().localeCompare(b.name.toLowerCase());\r\n            })\r\n          : copy3.sort((a, b) => {\r\n              return b.name.toLowerCase().localeCompare(a.name.toLowerCase());\r\n            });\r\n      return {\r\n        ...state,\r\n        pokemons: sortedName,\r\n      };\r\n    case ORDER_STR:\r\n      let copy4 = state.pokemons;\r\n      let sortedStr =\r\n        action.payload === \"asc\"\r\n          ? copy4.sort((a, b) => a.attack - b.attack)\r\n          : copy4.sort((a, b) => b.attack - a.attack);\r\n      // console.table(sortedStr);\r\n      return {\r\n        ...state,\r\n        pokemons: sortedStr,\r\n      };\r\n    case GET_POKEMON_NAME:\r\n      return {\r\n        ...state,\r\n        pokemons: action.payload,\r\n      };\r\n    case GET_DETAILS:\r\n      return {\r\n        ...state,\r\n        pokeDetail: action.payload,\r\n      };\r\n    case CLEAN_DETAIL:\r\n      return {\r\n        ...state,\r\n        pokeDetail: action.payload,\r\n      };\r\n    case POST_POKEMON:\r\n      return {\r\n        ...state,\r\n      };\r\n    default:\r\n      return { ...state };\r\n  }\r\n};\r\n\r\nexport default rootReducer;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}