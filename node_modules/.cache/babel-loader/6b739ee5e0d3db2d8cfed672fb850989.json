{"ast":null,"code":"import axios from \"axios\";\nimport swal from \"sweetalert\";\nexport const pokeAction = {\n  GET_ALL_POKEMONS: \"GET_ALL_POKEMONS\",\n  GET_TYPES: \"GET_TYPES\",\n  FILTER_POKEMONS_CREATED: \"FILTER_POKEMONS_CREATED\",\n  SORT_POKEMONS_ALPHABETICALLY: \"SORT_POKEMONS_ALPHABETICALLY\",\n  FILTER_POKEMONS_BY_TYPE: \"FILTER_POKEMONS_BY_TYPE\",\n  SORT_POKEMONS_BY_STRENGTH: \"SORT_POKEMONS_BY_STRENGTH\",\n  GET_POKEMON: \"GET_POKEMON\",\n  POST_POKEMON: \"POST_POKEMON\",\n  GET_DETAILS: \"GET_DETAILS\",\n  CLEAR_DETAILS_STATE: \"CLEAR_DETAILS_STATE\",\n  LOADER_TRUE: \"LOADER_TRUE\",\n  LOADER_FALSE: \"LOADER_FALSE\"\n};\n\n//acción que permite traer a todos los pokemones del api + los de la base de datos\nexport function getAllPokemons() {\n  return async function (dispatch) {\n    try {\n      const pokemons = await axios(\"/pokemons\");\n      return dispatch({\n        type: pokeAction.GET_ALL_POKEMONS,\n        payload: pokemons.data\n      });\n    } catch (error) {\n      console.error(error);\n      // alert(\"Ha ocurrido un error, por favor vuelve a intentar\");\n      swal({\n        title: \"Error\",\n        text: \"Ha ocurrido un error, por favor vuelve a intentar\",\n        icon: \"error\"\n      });\n    }\n  };\n}\n// export function getAllPokemons() {\n//   return function (dispatch) {\n//     axios(\"/pokemons\")\n//       .then((pokemons) => {\n//         return dispatch({\n//           type: pokeAction.GET_ALL_POKEMONS,\n//           payload: pokemons.data,\n//         });\n//       })\n//       .catch((error) => {\n//         console.error(error);\n//         alert(\"Ha ocurrido un error, por favor vuelve a intentar\");\n//       });\n//   };\n// }\n\n//acción que permite traer a un pokemon por su nombre exacto o su id\nexport function getPokemon(name) {\n  return async function (dispatch) {\n    try {\n      const pokemon = await axios(`/pokemons?name=${name}`);\n      return dispatch({\n        type: pokeAction.GET_POKEMON,\n        payload: pokemon.data\n      });\n    } catch (error) {\n      console.error(error);\n      // alert(\"Ha ocurrido un error, por favor vuelve a intentar\");\n      swal({\n        title: \"Error\",\n        text: \"Ha ocurrido un error, por favor vuelve a intentar\",\n        icon: \"error\"\n      });\n      return dispatch({\n        type: pokeAction.LOADER_FALSE\n      });\n    }\n  };\n}\n\n//acción que permite crear a un pokemon con los datos obtenidos desde el formulario controlado\nexport function postPokemon(dataPokemon) {\n  return async function (dispatch) {\n    try {\n      const pokemon = await axios.post(\"/pokemons\", dataPokemon);\n      // alert(\"Pokemon Creado\");\n      swal({\n        title: \"Ok\",\n        text: \"Pokemon Creado\",\n        icon: \"success\"\n      });\n      return dispatch({\n        type: pokeAction.POST_POKEMON,\n        payload: pokemon\n      });\n    } catch (error) {\n      console.error(error);\n      // alert(\"Ha ocurrido un error, por favor vuelve a intentar\");\n      swal({\n        title: \"Error\",\n        text: \"Ha ocurrido un error, por favor vuelve a intentar\",\n        icon: \"error\"\n      });\n    }\n  };\n}\n\n//acción que permite traer todos los types de los pokemones\nexport function getTypes() {\n  return async function (dispatch) {\n    try {\n      const types = await axios(\"/types\");\n      return dispatch({\n        type: pokeAction.GET_TYPES,\n        payload: types.data\n      });\n    } catch (error) {\n      console.error(error);\n      // alert(\"Ha ocurrido un error, por favor vuelve a intentar\");\n      swal({\n        title: \"Error\",\n        text: \"Ha ocurrido un error, por favor vuelve a intentar\",\n        icon: \"error\"\n      });\n    }\n  };\n}\n\n//acción que permite filtrar a los pokemones por tipo\nexport function fillterPokemonsByType(types) {\n  return {\n    type: pokeAction.FILTER_POKEMONS_BY_TYPE,\n    payload: types\n  };\n}\n\n//acción que permite filtrar a los pokemones si estos vienen del api o de la base de datos\nexport function fillterPokemonsCreated(created) {\n  return {\n    type: pokeAction.FILTER_POKEMONS_CREATED,\n    payload: created\n  };\n}\n\n//acción que permite ordenar a los pokemones de forma alfabética\nexport function sortPokemonsAlphabetically(sort) {\n  return {\n    type: pokeAction.SORT_POKEMONS_ALPHABETICALLY,\n    payload: sort\n  };\n}\n\n//acción que permite ordenar a los pokemones por fuerza (actualmente en desuso)\nexport function sortPokemonsByStrength(sort) {\n  return {\n    type: pokeAction.SORT_POKEMONS_BY_STRENGTH,\n    payload: sort\n  };\n}\n\n//acción que permite traer un pokemon por su id para la ruta de detalles\nexport function getDetails(id) {\n  return async function (dispatch) {\n    try {\n      const detail = await axios(`/pokemons/${id}`);\n      return dispatch({\n        type: pokeAction.GET_DETAILS,\n        payload: detail.data\n      });\n    } catch (error) {\n      console.error(error);\n      // alert(\"Ha ocurrido un error, por favor vuelve a intentar\");\n      swal({\n        title: \"Error\",\n        text: \"Ha ocurrido un error, por favor vuelve a intentar\",\n        icon: \"error\"\n      });\n      return dispatch({\n        type: pokeAction.LOADER_FALSE\n      });\n    }\n  };\n}\n\n//acción que permite limpiar el estado de detalles\nexport function clearDetailsState() {\n  return {\n    type: pokeAction.CLEAR_DETAILS_STATE\n  };\n}\n\n//acción que permite cambiara true el estado de loader\nexport function trueLoader() {\n  return {\n    type: pokeAction.LOADER_TRUE\n  };\n}\n\n//acción que permite cambiar a false es estado de loader\nexport function falseLoader() {\n  return {\n    type: pokeAction.LOADER_FALSE\n  };\n}","map":{"version":3,"names":["axios","swal","pokeAction","GET_ALL_POKEMONS","GET_TYPES","FILTER_POKEMONS_CREATED","SORT_POKEMONS_ALPHABETICALLY","FILTER_POKEMONS_BY_TYPE","SORT_POKEMONS_BY_STRENGTH","GET_POKEMON","POST_POKEMON","GET_DETAILS","CLEAR_DETAILS_STATE","LOADER_TRUE","LOADER_FALSE","getAllPokemons","dispatch","pokemons","type","payload","data","error","console","title","text","icon","getPokemon","name","pokemon","postPokemon","dataPokemon","post","getTypes","types","fillterPokemonsByType","fillterPokemonsCreated","created","sortPokemonsAlphabetically","sort","sortPokemonsByStrength","getDetails","id","detail","clearDetailsState","trueLoader","falseLoader"],"sources":["C:/Users/ADMIN/Downloads/PI-Pokemon-main/client/src/actions/index.js"],"sourcesContent":["import axios from \"axios\";\nimport swal from \"sweetalert\";\n\nexport const pokeAction = {\n  GET_ALL_POKEMONS: \"GET_ALL_POKEMONS\",\n  GET_TYPES: \"GET_TYPES\",\n  FILTER_POKEMONS_CREATED: \"FILTER_POKEMONS_CREATED\",\n  SORT_POKEMONS_ALPHABETICALLY: \"SORT_POKEMONS_ALPHABETICALLY\",\n  FILTER_POKEMONS_BY_TYPE: \"FILTER_POKEMONS_BY_TYPE\",\n  SORT_POKEMONS_BY_STRENGTH: \"SORT_POKEMONS_BY_STRENGTH\",\n  GET_POKEMON: \"GET_POKEMON\",\n  POST_POKEMON: \"POST_POKEMON\", \n  GET_DETAILS: \"GET_DETAILS\",\n  CLEAR_DETAILS_STATE: \"CLEAR_DETAILS_STATE\",\n  LOADER_TRUE: \"LOADER_TRUE\",\n  LOADER_FALSE: \"LOADER_FALSE\",\n};\n\n//acción que permite traer a todos los pokemones del api + los de la base de datos\nexport function getAllPokemons() {\n  return async function (dispatch) {\n    try {\n      const pokemons = await axios(\"/pokemons\");\n      return dispatch({\n        type: pokeAction.GET_ALL_POKEMONS,\n        payload: pokemons.data,\n      });\n    } catch (error) {\n      console.error(error);\n      // alert(\"Ha ocurrido un error, por favor vuelve a intentar\");\n      swal({\n        title: \"Error\",\n        text: \"Ha ocurrido un error, por favor vuelve a intentar\",\n        icon: \"error\",\n      });\n    }\n  };\n}\n// export function getAllPokemons() {\n//   return function (dispatch) {\n//     axios(\"/pokemons\")\n//       .then((pokemons) => {\n//         return dispatch({\n//           type: pokeAction.GET_ALL_POKEMONS,\n//           payload: pokemons.data,\n//         });\n//       })\n//       .catch((error) => {\n//         console.error(error);\n//         alert(\"Ha ocurrido un error, por favor vuelve a intentar\");\n//       });\n//   };\n// }\n\n//acción que permite traer a un pokemon por su nombre exacto o su id\nexport function getPokemon(name) {\n  return async function (dispatch) {\n    try {\n      const pokemon = await axios(\n        `/pokemons?name=${name}`\n      );\n      return dispatch({\n        type: pokeAction.GET_POKEMON,\n        payload: pokemon.data,\n      });\n    } catch (error) {\n      console.error(error);\n      // alert(\"Ha ocurrido un error, por favor vuelve a intentar\");\n      swal({\n        title: \"Error\",\n        text: \"Ha ocurrido un error, por favor vuelve a intentar\",\n        icon: \"error\",\n      });\n      return dispatch({ type: pokeAction.LOADER_FALSE });\n    }\n  };\n}\n\n//acción que permite crear a un pokemon con los datos obtenidos desde el formulario controlado\nexport function postPokemon(dataPokemon) {\n  return async function (dispatch) {\n    try {\n      const pokemon = await axios.post(\n        \"/pokemons\",\n        dataPokemon\n      );\n      // alert(\"Pokemon Creado\");\n      swal({\n        title: \"Ok\",\n        text: \"Pokemon Creado\",\n        icon: \"success\",\n      });\n      return dispatch({\n        type: pokeAction.POST_POKEMON,\n        payload: pokemon,\n      });\n    } catch (error) {\n      console.error(error);\n      // alert(\"Ha ocurrido un error, por favor vuelve a intentar\");\n      swal({\n        title: \"Error\",\n        text: \"Ha ocurrido un error, por favor vuelve a intentar\",\n        icon: \"error\",\n      });\n    }\n  };\n}\n\n//acción que permite traer todos los types de los pokemones\nexport function getTypes() {\n  return async function (dispatch) {\n    try {\n      const types = await axios(\"/types\");\n      return dispatch({\n        type: pokeAction.GET_TYPES,\n        payload: types.data,\n      });\n    } catch (error) {\n      console.error(error);\n      // alert(\"Ha ocurrido un error, por favor vuelve a intentar\");\n      swal({\n        title: \"Error\",\n        text: \"Ha ocurrido un error, por favor vuelve a intentar\",\n        icon: \"error\",\n      });\n    }\n  };\n}\n\n//acción que permite filtrar a los pokemones por tipo\nexport function fillterPokemonsByType(types) {\n  return {\n    type: pokeAction.FILTER_POKEMONS_BY_TYPE,\n    payload: types,\n  };\n}\n\n//acción que permite filtrar a los pokemones si estos vienen del api o de la base de datos\nexport function fillterPokemonsCreated(created) {\n  return {\n    type: pokeAction.FILTER_POKEMONS_CREATED,\n    payload: created,\n  };\n}\n\n//acción que permite ordenar a los pokemones de forma alfabética\nexport function sortPokemonsAlphabetically(sort) {\n  return {\n    type: pokeAction.SORT_POKEMONS_ALPHABETICALLY,\n    payload: sort,\n  };\n}\n\n//acción que permite ordenar a los pokemones por fuerza (actualmente en desuso)\nexport function sortPokemonsByStrength(sort) {\n  return {\n    type: pokeAction.SORT_POKEMONS_BY_STRENGTH,\n    payload: sort,\n  };\n}\n\n//acción que permite traer un pokemon por su id para la ruta de detalles\nexport function getDetails(id) {\n  return async function (dispatch) {\n    try {\n      const detail = await axios(`/pokemons/${id}`);\n      return dispatch({\n        type: pokeAction.GET_DETAILS,\n        payload: detail.data,\n      });\n    } catch (error) {\n      console.error(error);\n      // alert(\"Ha ocurrido un error, por favor vuelve a intentar\");\n      swal({\n        title: \"Error\",\n        text: \"Ha ocurrido un error, por favor vuelve a intentar\",\n        icon: \"error\",\n      });\n      return dispatch({ type: pokeAction.LOADER_FALSE });\n    }\n  };\n}\n\n//acción que permite limpiar el estado de detalles\nexport function clearDetailsState() {\n  return {\n    type: pokeAction.CLEAR_DETAILS_STATE,\n  };\n}\n\n//acción que permite cambiara true el estado de loader\nexport function trueLoader() {\n  return {\n    type: pokeAction.LOADER_TRUE,\n  };\n}\n\n//acción que permite cambiar a false es estado de loader\nexport function falseLoader() {\n  return {\n    type: pokeAction.LOADER_FALSE,\n  };\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}