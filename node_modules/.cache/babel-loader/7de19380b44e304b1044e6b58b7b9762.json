{"ast":null,"code":"import { GET_POKEMONS, GET_ALL_TYPES, FILTER_CREATED, ORDER_NAME, FILTER_TYPE, ORDER_STR, GET_POKEMON_NAME, POST_POKEMON, GET_DETAILS, CLEAN_DETAIL, CLEAN_POKEMONS } from \"../actions\";\nconst initialState = {\n  pokemons: [],\n  pokemonBackup: [],\n  allPokemons: [],\n  types: [],\n  pokeDetail: [],\n  searchPokemons: []\n};\nconst rootReducer = function () {\n  var _e$genres;\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n  switch (action.type) {\n    case GET_POKEMONS:\n      return {\n        ...state,\n        pokemons: action.payload,\n        allPokemons: action.payload\n      };\n    case CLEAN_POKEMONS:\n      return {\n        ...state,\n        pokemons: action.payload\n      };\n    case GET_ALL_TYPES:\n      return {\n        ...state,\n        types: action.payload\n      };\n    case FILTER_CREATED:\n      let copy = state.allPokemons;\n      let createdFiltered;\n      if (action.payload === 'created') {\n        createdFiltered = copy.filter(e => e.createInDb);\n      } else if (action.payload === 'api') {\n        createdFiltered = copy.filter(e => !e.createInDb);\n      } else {\n        createdFiltered = copy;\n      }\n      return {\n        ...state,\n        pokemons: createdFiltered\n      };\n    case FILTER_TYPE:\n      // let copyTwo = state.pokemonBackup;\n      // let typeFiltered;\n\n      //  if (action.payload === 'all'){\n      //     typeFiltered=copyTwo\n      //  } else{\n      //     typeFiltered = copyTwo.filter((e) =>\n      //       e.types?.includes(action.payload)\n      //     );\n\n      //  }\n\n      // return {\n      //     ...state,\n      //     pokemons: typeFiltered\n      // };\n      // const allVideoGames = state.allPokemons;\n      // const genresFiltered = action.payload === \"all\" ? allVideoGames : allVideoGames.filter(e => e.types?.includes(action.payload))\n      // return{\n      //     ...state,\n      //     pokemons: genresFiltered,\n      // }\n      const allVideoGames = state.allPokemons;\n      const genresFiltered = action.payload === \"all\" ? allVideoGames : allVideoGames.filter(e => {\n        var _e$types;\n        if (Array.isArray(e.types)) return (_e$types = e.types) === null || _e$types === void 0 ? void 0 : _e$types.map(el => el.name === action.payload);\n      });\n      return (_e$genres = e.genres) === null || _e$genres === void 0 ? void 0 : _e$genres.includes(action.payload);\n    case ORDER_NAME:\n      let copy3 = state.pokemons;\n      let sortedName = action.payload === 'asc' ? copy3.sort((a, b) => {\n        return a.name.toLowerCase().localeCompare(b.name.toLowerCase());\n      }) : copy3.sort((a, b) => {\n        return b.name.toLowerCase().localeCompare(a.name.toLowerCase());\n      });\n      return {\n        ...state,\n        pokemons: sortedName\n      };\n    case ORDER_STR:\n      let copy4 = state.pokemons;\n      let sortedStr = action.payload === \"asc\" ? copy4.sort((a, b) => a.strength - b.strength) : copy4.sort((a, b) => b.strength - a.strength);\n      // console.table(sortedStr);    \n      return {\n        ...state,\n        pokemons: sortedStr\n      };\n    case GET_POKEMON_NAME:\n      const findPokemon = state.allPokemons.filter(pokemon => pokemon.id === action.payload.id);\n      if (findPokemon.length) {\n        return {\n          ...state,\n          pokemons: [action.payload]\n        };\n      } else {\n        return {\n          ...state,\n          pokemons: [action.payload],\n          // si hago get a un pokemon que no esté en el estado actual, lo guardo en un arreglo y luego lo paso al principal\n          searchPokemons: [action.payload, ...state.searchPokemons]\n        };\n      }\n    case GET_DETAILS:\n      return {\n        ...state,\n        pokeDetail: action.payload\n      };\n    case CLEAN_DETAIL:\n      return {\n        ...state,\n        pokeDetail: action.payload\n      };\n    case POST_POKEMON:\n      return {\n        ...state\n      };\n    default:\n      return {\n        ...state\n      };\n  }\n  ;\n};\nexport default rootReducer;","map":{"version":3,"names":["GET_POKEMONS","GET_ALL_TYPES","FILTER_CREATED","ORDER_NAME","FILTER_TYPE","ORDER_STR","GET_POKEMON_NAME","POST_POKEMON","GET_DETAILS","CLEAN_DETAIL","CLEAN_POKEMONS","initialState","pokemons","pokemonBackup","allPokemons","types","pokeDetail","searchPokemons","rootReducer","state","action","type","payload","copy","createdFiltered","filter","e","createInDb","allVideoGames","genresFiltered","Array","isArray","map","el","name","genres","includes","copy3","sortedName","sort","a","b","toLowerCase","localeCompare","copy4","sortedStr","strength","findPokemon","pokemon","id","length"],"sources":["C:/Users/ADMIN/Downloads/PI-Pokemon-main/client/src/reducer/index.js"],"sourcesContent":["import { \n    GET_POKEMONS, \n    GET_ALL_TYPES, \n    FILTER_CREATED, \n    ORDER_NAME, \n    FILTER_TYPE,\n    ORDER_STR,\n    GET_POKEMON_NAME,\n    POST_POKEMON,\n    GET_DETAILS,\n    CLEAN_DETAIL,\n    CLEAN_POKEMONS\n } from \"../actions\";\n\nconst initialState = {\n  pokemons: [],\n  pokemonBackup: [],\n  allPokemons: [],\n  types: [],\n  pokeDetail: [],\n  searchPokemons: [],\n};\n\nconst rootReducer = (state = initialState, action) => {\n    \n    switch(action.type) {\n        case GET_POKEMONS:\n            return {\n                ...state,\n                pokemons: action.payload,\n                allPokemons: action.payload\n            };\n        case CLEAN_POKEMONS:\n            return {\n                ...state,\n                pokemons: action.payload\n            }    \n        case GET_ALL_TYPES:\n            return {\n                ...state,\n                types: action.payload\n            }; \n        case FILTER_CREATED:\n            let copy = state.allPokemons;\n            let createdFiltered;\n            if (action.payload === 'created') {\n                createdFiltered = copy.filter((e) => e.createInDb);\n            } else if (action.payload === 'api') {\n                createdFiltered = copy.filter((e) => !e.createInDb);\n            } else {\n                createdFiltered = copy;\n            }\n            return {\n                ...state,\n                pokemons: createdFiltered\n            };\n        case FILTER_TYPE:\n            // let copyTwo = state.pokemonBackup;\n            // let typeFiltered;\n            \n            //  if (action.payload === 'all'){\n            //     typeFiltered=copyTwo\n            //  } else{\n            //     typeFiltered = copyTwo.filter((e) =>\n            //       e.types?.includes(action.payload)\n            //     );\n\n            //  }\n            \n            // return {\n            //     ...state,\n            //     pokemons: typeFiltered\n            // };\n            // const allVideoGames = state.allPokemons;\n            // const genresFiltered = action.payload === \"all\" ? allVideoGames : allVideoGames.filter(e => e.types?.includes(action.payload))\n            // return{\n            //     ...state,\n            //     pokemons: genresFiltered,\n            // }\n            const allVideoGames = state.allPokemons;\n            const genresFiltered = action.payload === \"all\" \n            ? allVideoGames \n            : allVideoGames.filter(e => {\n              \n                if(Array.isArray(e.types)) \n                return e.types?.map(el => el.name === action.payload)})\n            return e.genres?.includes(action.payload)\n        \n        case ORDER_NAME:\n            let copy3 = state.pokemons;\n            let sortedName = action.payload === 'asc' ?\n                copy3.sort((a, b) => {\n                    return a.name.toLowerCase().localeCompare(b.name.toLowerCase())\n                }) :\n                copy3.sort((a, b) => {\n                    return b.name.toLowerCase().localeCompare(a.name.toLowerCase())\n                })\n            return {\n                ...state,\n                pokemons: sortedName\n            };          \n        case ORDER_STR:\n            let copy4 = state.pokemons;\n            let sortedStr =\n              action.payload === \"asc\"\n                ? copy4.sort((a, b) => a.strength - b.strength)\n                : copy4.sort((a, b) => b.strength - a.strength);\n            // console.table(sortedStr);    \n            return {\n                ...state,\n                pokemons: sortedStr\n            };\n        case GET_POKEMON_NAME:\n              const findPokemon = state.allPokemons.filter(\n        (pokemon) => pokemon.id === action.payload.id\n      );\n      if (findPokemon.length) {\n        return {\n          ...state,\n          pokemons: [action.payload],\n         \n        };\n      } else {\n        return {\n          ...state,\n          pokemons: [action.payload], // si hago get a un pokemon que no esté en el estado actual, lo guardo en un arreglo y luego lo paso al principal\n          searchPokemons: [action.payload, ...state.searchPokemons],\n          \n        };\n      }\n        case GET_DETAILS:\n            return {\n                ...state,\n                pokeDetail: action.payload\n            }\n        case CLEAN_DETAIL:\n            return {\n                ...state,\n                pokeDetail: action.payload\n            }\n        case POST_POKEMON:\n            return {\n                ...state\n            };\n        default: \n            return {...state};\n    };\n    \n};\n\nexport default rootReducer;"],"mappings":"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"},"metadata":{},"sourceType":"module"}