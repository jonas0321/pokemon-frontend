{"ast":null,"code":"import axios from \"axios\";\nexport const GET_POKEMONS = \"GET_POKEMONS\";\nexport const GET_ALL_TYPES = \"GET_ALL_TYPES\";\nexport const FILTER_CREATED = \"FILTER_CREATED\";\nexport const ORDER_NAME = \"ORDER_NAME\";\nexport const FILTER_TYPE = \"FILTER_TYPE\";\nexport const ORDER_STR = \"FILTER_STR\";\nexport const GET_POKEMON_NAME = \"GET_POKEMON_NAME\";\nexport const POST_POKEMON = \"POST_POKEMON\";\nexport const GET_DETAILS = \"GET_DETAILS\";\nexport const CLEAN_DETAIL = \"CLEAN_DETAIL\";\nexport const CLEAN_POKEMONS = \"CLEAN_POKEMONS\";\nexport const getPokemons = () => {\n  return async dispatch => {\n    try {\n      let url = \"http://localhost:3001/pokemons\";\n      let json = await axios.get(url);\n      return dispatch({\n        type: GET_POKEMONS,\n        payload: json.data\n      });\n    } catch (e) {\n      console.log(e);\n    }\n  };\n};\nexport const cleanPokemons = dispatch => {\n  return dispatch({\n    type: CLEAN_POKEMONS,\n    payload: []\n  });\n};\nexport const getAlltypes = () => {\n  return async dispatch => {\n    try {\n      let url = \"http://localhost:3001/types\";\n      let json = await axios.get(url);\n      return dispatch({\n        type: GET_ALL_TYPES,\n        payload: json.data\n      });\n    } catch (e) {\n      console.log(e);\n    }\n  };\n};\nexport const filterCreated = create => {\n  return {\n    type: FILTER_CREATED,\n    payload: create\n  };\n};\nexport const orderName = name => {\n  return {\n    type: ORDER_NAME,\n    payload: name\n  };\n};\nexport const filterType = types => {\n  return {\n    type: FILTER_TYPE,\n    payload: types\n  };\n  // return async (dispatch) => {\n  //   try {\n  //     var json = await axios.get(`http://localhost:3001/types`);\n\n  //     console.log(json);\n  //     return dispatch({\n  //       type: FILTER_TYPE,\n  //       payload: json.data,\n  //     });\n  //   } catch (e) {\n  //     alert(\"type not found\");\n\n  //     console.log(e);\n  //   }\n  // };\n};\n\nexport const filterStr = str => {\n  return {\n    type: ORDER_STR,\n    payload: str\n  };\n};\nexport const getPokemonByName = name => {\n  return async dispatch => {\n    //     try {\n    //         let json = await axios.get(`http://localhost:3001/pokemons?name=${name}`)\n    //         const response= await json.data\n\n    //         console.log(json.data);\n    //          dispatch({\n    //             type: GET_POKEMON_NAME,\n    //             payload: response\n    //         })\n    //     } catch (e) {\n    //         //alert('Pokemon not found');\n    //         //window.location.href = \"http://localhost:3000/home\";\n    //         console.log(e);\n    //     };\n    // };\n  };\n};\nexport function getDetailPromise(id) {\n  return function (dispatch) {\n    axios.get(`http://localhost:3001/pokemons/${id}`).then(res => res.data).then(res => dispatch({\n      type: GET_DETAILS,\n      payload: res\n    })).catch(err => console.log(err));\n  };\n}\nexport const cleanDetail = dispatch => {\n  return dispatch({\n    type: CLEAN_DETAIL,\n    payload: []\n  });\n};\nexport const postPokemon = payload => {\n  return async () => {\n    try {\n      var createPoke = await axios.post(\"http://localhost:3001/pokemons\", payload);\n      console.log(createPoke);\n      alert(\"New pokemón is created!\");\n      return createPoke;\n    } catch (e) {\n      alert(\"Pokemon name already exist\");\n      console.log(e);\n    }\n  };\n};","map":{"version":3,"names":["axios","GET_POKEMONS","GET_ALL_TYPES","FILTER_CREATED","ORDER_NAME","FILTER_TYPE","ORDER_STR","GET_POKEMON_NAME","POST_POKEMON","GET_DETAILS","CLEAN_DETAIL","CLEAN_POKEMONS","getPokemons","dispatch","url","json","get","type","payload","data","e","console","log","cleanPokemons","getAlltypes","filterCreated","create","orderName","name","filterType","types","filterStr","str","getPokemonByName","getDetailPromise","id","then","res","catch","err","cleanDetail","postPokemon","createPoke","post","alert"],"sources":["C:/Users/ADMIN/Downloads/PI-Pokemon-main/client/src/actions/index.js"],"sourcesContent":["import axios from \"axios\";\n\nexport const GET_POKEMONS = \"GET_POKEMONS\";\nexport const GET_ALL_TYPES = \"GET_ALL_TYPES\";\nexport const FILTER_CREATED = \"FILTER_CREATED\";\nexport const ORDER_NAME = \"ORDER_NAME\";\nexport const FILTER_TYPE = \"FILTER_TYPE\";\nexport const ORDER_STR = \"FILTER_STR\";\nexport const GET_POKEMON_NAME = \"GET_POKEMON_NAME\";\nexport const POST_POKEMON = \"POST_POKEMON\";\nexport const GET_DETAILS = \"GET_DETAILS\";\nexport const CLEAN_DETAIL = \"CLEAN_DETAIL\";\nexport const CLEAN_POKEMONS = \"CLEAN_POKEMONS\";\n\nexport const getPokemons = () => {\n  return async (dispatch) => {\n    try {\n      let url = \"http://localhost:3001/pokemons\";\n      let json = await axios.get(url);\n      return dispatch({\n        type: GET_POKEMONS,\n        payload: json.data,\n      });\n    } catch (e) {\n      console.log(e);\n    }\n  };\n};\n\nexport const cleanPokemons = (dispatch) => {\n  return dispatch({\n    type: CLEAN_POKEMONS,\n    payload: [],\n  });\n};\n\nexport const getAlltypes = () => {\n  return async (dispatch) => {\n    try {\n      let url = \"http://localhost:3001/types\";\n      let json = await axios.get(url);\n      return dispatch({\n        type: GET_ALL_TYPES,\n        payload: json.data,\n      });\n    } catch (e) {\n      console.log(e);\n    }\n  };\n};\n\nexport const filterCreated = (create) => {\n  return {\n    type: FILTER_CREATED,\n    payload: create,\n  };\n};\n\nexport const orderName = (name) => {\n  return {\n    type: ORDER_NAME,\n    payload: name,\n  };\n};\n\nexport const filterType = (types) => {\n  return {\n    type: FILTER_TYPE,\n    payload: types,\n  };\n  // return async (dispatch) => {\n  //   try {\n  //     var json = await axios.get(`http://localhost:3001/types`);\n\n  //     console.log(json);\n  //     return dispatch({\n  //       type: FILTER_TYPE,\n  //       payload: json.data,\n  //     });\n  //   } catch (e) {\n  //     alert(\"type not found\");\n\n  //     console.log(e);\n  //   }\n  // };\n};\n\nexport const filterStr = (str) => {\n  return {\n    type: ORDER_STR,\n    payload: str,\n  };\n};\n\nexport const getPokemonByName = (name) => {\n  return async (dispatch) => {\n    //     try {\n    //         let json = await axios.get(`http://localhost:3001/pokemons?name=${name}`)\n    //         const response= await json.data\n\n    //         console.log(json.data);\n    //          dispatch({\n    //             type: GET_POKEMON_NAME,\n    //             payload: response\n    //         })\n    //     } catch (e) {\n    //         //alert('Pokemon not found');\n    //         //window.location.href = \"http://localhost:3000/home\";\n    //         console.log(e);\n    //     };\n    // };\n\n  };\n};\n\nexport function getDetailPromise(id) {\n  return function (dispatch) {\n    axios\n      .get(`http://localhost:3001/pokemons/${id}`)\n      .then((res) => res.data)\n      .then((res) =>\n        dispatch({\n          type: GET_DETAILS,\n          payload: res,\n        })\n      )\n      .catch((err) => console.log(err));\n  };\n}\n\nexport const cleanDetail = (dispatch) => {\n  return dispatch({\n    type: CLEAN_DETAIL,\n    payload: [],\n  });\n};\n\nexport const postPokemon = (payload) => {\n  return async () => {\n    try {\n      var createPoke = await axios.post(\n        \"http://localhost:3001/pokemons\",\n        payload\n      );\n      console.log(createPoke);\n      alert(\"New pokemón is created!\");\n      return createPoke;\n    } catch (e) {\n      alert(\"Pokemon name already exist\");\n      console.log(e);\n    }\n  };\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}