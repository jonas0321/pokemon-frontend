{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ADMIN\\\\Downloads\\\\PI-Pokemon-main\\\\client\\\\src\\\\components\\\\Home.js\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport { useState, useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { getAllPokemons, getTypes, fillterPokemonsByType, fillterPokemonsCreated, sortPokemonsAlphabetically,\n// sortPokemonsByStrength,\ntrueLoader } from \"../actions\";\nimport styles from \"./styles/Home.module.css\";\nimport Card from \"./Card\";\nimport { capitalizeString } from \"../utils/utils\";\nimport Paginado from \"./Paginado\";\nimport Loader from \"./Loader\";\nimport NavHome from \"./NavHome\";\nimport defaultImg from \"../assets/who_is.png\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Home() {\n  _s();\n  const dispatch = useDispatch();\n  //Estados de Redux\n  const allPokemons = useSelector(state => state.pokemons);\n  const typesPokemons = useSelector(state => state.types);\n  const loader = useSelector(state => state.loader);\n  useEffect(() => {\n    //componentDitMount, pide (despacha las acciones) los pokemons de la ruta principal y los tipos al montar el componente\n    dispatch(getTypes());\n    dispatch(getAllPokemons());\n    return () => {\n      //componentWilUnmount, despacha la acción al desmontar el componente\n      dispatch(trueLoader());\n    };\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []); //NOTA: Podemos poner dispatch como argumento para que se ejecute el useEffect cada vez que se despache una acción, pero como no queremos estarle pegando a cada momento a la ruta de pokemons y tipos lo dejaremos así mientras.\n\n  /******* Voy a setear estados locales para manejar el paginado *********/\n  // eslint-disable-next-line no-unused-vars\n  const [order, setOrder] = useState(\"\");\n  const [currentPage, setCurrentPage] = useState(1); //inicializamos en la página 1 para arrancar desde allí\n  const pokemonsPerPage = 12; //12 pokemons por página\n  const indexOfLastPokemon = currentPage * pokemonsPerPage; //voy a guardar el índice del último pokemon por página, para irlos ordenando, ojo es índice no id\n  const indexOfFirstPokemon = indexOfLastPokemon - pokemonsPerPage; //0\n  const currentPokemons = allPokemons.slice(indexOfFirstPokemon, indexOfLastPokemon); //pokemons en la página actual\n  const paginado = page => {\n    setCurrentPage(page);\n  };\n\n  /***** Manejadores de eventos (Handlers) ******/\n\n  function handleClick(e) {\n    e.preventDefault();\n    dispatch(trueLoader());\n    dispatch(getTypes());\n    dispatch(getAllPokemons());\n  }\n  function handleFilterTypes(e) {\n    dispatch(fillterPokemonsByType(e.target.value));\n    setCurrentPage(1);\n  }\n  function handleFilterCreated(e) {\n    dispatch(fillterPokemonsCreated(e.target.value));\n    setCurrentPage(1);\n  }\n  function handleSortAlphabetically(e) {\n    dispatch(sortPokemonsAlphabetically(e.target.value));\n    setCurrentPage(1); //seteo la página actual en 1\n    setOrder(e.target.value); //Seteo el orden actual para que me lo tome y haga el renderizado\n  }\n\n  // function handleSortByStrength(e) {\n  //   dispatch(sortPokemonsByStrength(e.target.value));\n  //   setCurrentPage(1);\n  //   setOrder(e.target.value);\n  // }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.background,\n    children: [/*#__PURE__*/_jsxDEV(NavHome, {\n      typesPokemons: typesPokemons,\n      handleSortAlphabetically: handleSortAlphabetically\n      // handleSortByStrength={handleSortByStrength}\n      ,\n      handleFilterCreated: handleFilterCreated,\n      handleFilterTypes: handleFilterTypes\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.pokemonscontainer,\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: styles.refresh,\n        onClick: handleClick,\n        children: \"Refrescar\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 9\n      }, this), loader ? /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(Paginado, {\n          pokemonsPerPage: pokemonsPerPage,\n          allPokemons: allPokemons,\n          currentPage: currentPage,\n          paginado: paginado\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 13\n        }, this), currentPokemons.length ? null : /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              textDecoration: \"none\",\n              color: \"#fff\",\n              margin: \"0 auto\"\n            },\n            to: \"/home\",\n            children: [/*#__PURE__*/_jsxDEV(\"img\", {\n              src: defaultImg,\n              alt: \"Pokemon not Found\",\n              width: \"300px\",\n              height: \"300px\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 117,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n              children: \" Pokemon Not Found\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 123,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.grid,\n          children: currentPokemons === null || currentPokemons === void 0 ? void 0 : currentPokemons.map(pokemon => {\n            return /*#__PURE__*/_jsxDEV(Card, {\n              name: capitalizeString(pokemon.name),\n              img: pokemon.img,\n              types: pokemon.types,\n              id: pokemon.id,\n              create: pokemon.createInDb\n            }, pokemon.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 131,\n              columnNumber: 19\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 85,\n    columnNumber: 5\n  }, this);\n}\n_s(Home, \"2SiX4BNCV1jHGvClDNa5iUqaUD8=\", false, function () {\n  return [useDispatch, useSelector, useSelector, useSelector];\n});\n_c = Home;\nvar _c;\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"names":["React","useState","useEffect","useDispatch","useSelector","getAllPokemons","getTypes","fillterPokemonsByType","fillterPokemonsCreated","sortPokemonsAlphabetically","trueLoader","styles","Card","capitalizeString","Paginado","Loader","NavHome","defaultImg","Home","dispatch","allPokemons","state","pokemons","typesPokemons","types","loader","order","setOrder","currentPage","setCurrentPage","pokemonsPerPage","indexOfLastPokemon","indexOfFirstPokemon","currentPokemons","slice","paginado","page","handleClick","e","preventDefault","handleFilterTypes","target","value","handleFilterCreated","handleSortAlphabetically","background","pokemonscontainer","refresh","length","textDecoration","color","margin","grid","map","pokemon","name","img","id","createInDb"],"sources":["C:/Users/ADMIN/Downloads/PI-Pokemon-main/client/src/components/Home.js"],"sourcesContent":["import React from \"react\";\nimport { useState, useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport {\n  getAllPokemons,\n  getTypes,\n  fillterPokemonsByType,\n  fillterPokemonsCreated,\n  sortPokemonsAlphabetically,\n  // sortPokemonsByStrength,\n  trueLoader,\n} from \"../actions\";\nimport styles from \"./styles/Home.module.css\";\nimport Card from \"./Card\";\nimport { capitalizeString } from \"../utils/utils\";\nimport Paginado from \"./Paginado\";\nimport Loader from \"./Loader\";\nimport NavHome from \"./NavHome\";\nimport defaultImg from \"../assets/who_is.png\";\n\nexport default function Home() {\n  const dispatch = useDispatch();\n  //Estados de Redux\n  const allPokemons = useSelector((state) => state.pokemons);\n  const typesPokemons = useSelector((state) => state.types);\n  const loader = useSelector((state) => state.loader);\n  useEffect(() => {\n    //componentDitMount, pide (despacha las acciones) los pokemons de la ruta principal y los tipos al montar el componente\n    dispatch(getTypes());\n    dispatch(getAllPokemons());\n    return () => {\n    //componentWilUnmount, despacha la acción al desmontar el componente\n      dispatch(trueLoader());\n    };\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []); //NOTA: Podemos poner dispatch como argumento para que se ejecute el useEffect cada vez que se despache una acción, pero como no queremos estarle pegando a cada momento a la ruta de pokemons y tipos lo dejaremos así mientras.\n\n  /******* Voy a setear estados locales para manejar el paginado *********/\n  // eslint-disable-next-line no-unused-vars\n  const [order, setOrder] = useState(\"\");\n  const [currentPage, setCurrentPage] = useState(1); //inicializamos en la página 1 para arrancar desde allí\n  const pokemonsPerPage = 12; //12 pokemons por página\n  const indexOfLastPokemon = currentPage * pokemonsPerPage; //voy a guardar el índice del último pokemon por página, para irlos ordenando, ojo es índice no id\n  const indexOfFirstPokemon = indexOfLastPokemon - pokemonsPerPage; //0\n  const currentPokemons = allPokemons.slice(\n    indexOfFirstPokemon,\n    indexOfLastPokemon\n  ); //pokemons en la página actual\n  const paginado = (page) => {\n    setCurrentPage(page);\n  };\n\n  /***** Manejadores de eventos (Handlers) ******/\n\n  function handleClick(e) {\n    e.preventDefault();\n    dispatch(trueLoader());\n    dispatch(getTypes());\n    dispatch(getAllPokemons());\n  }\n\n  function handleFilterTypes(e) {\n    dispatch(fillterPokemonsByType(e.target.value));\n    setCurrentPage(1);\n  }\n\n  function handleFilterCreated(e) {\n    dispatch(fillterPokemonsCreated(e.target.value));\n    setCurrentPage(1);\n  }\n\n  function handleSortAlphabetically(e) {\n    dispatch(sortPokemonsAlphabetically(e.target.value));\n    setCurrentPage(1); //seteo la página actual en 1\n    setOrder(e.target.value); //Seteo el orden actual para que me lo tome y haga el renderizado\n  }\n\n  // function handleSortByStrength(e) {\n  //   dispatch(sortPokemonsByStrength(e.target.value));\n  //   setCurrentPage(1);\n  //   setOrder(e.target.value);\n  // }\n\n  return (\n    <div className={styles.background}>\n      <NavHome\n        typesPokemons={typesPokemons}\n        handleSortAlphabetically={handleSortAlphabetically}\n        // handleSortByStrength={handleSortByStrength}\n        handleFilterCreated={handleFilterCreated}\n        handleFilterTypes={handleFilterTypes}\n      />\n      <div className={styles.pokemonscontainer}>\n        <button className={styles.refresh} onClick={handleClick}>\n          Refrescar\n        </button>\n        {loader ? (\n          <Loader />\n        ) : (\n          <div>\n            <Paginado\n              pokemonsPerPage={pokemonsPerPage}\n              allPokemons={allPokemons}\n              currentPage={currentPage}\n              paginado={paginado}\n            />\n            {currentPokemons.length ? null : (\n              <div>\n                <div\n                  style={{\n                    textDecoration: \"none\",\n                    color: \"#fff\",\n                    margin: \"0 auto\",\n                  }}\n                  to=\"/home\"\n                >\n                  <img\n                    src={defaultImg}\n                    alt=\"Pokemon not Found\"\n                    width=\"300px\"\n                    height=\"300px\"\n                  />\n                  <h2> Pokemon Not Found</h2>\n                </div>\n              </div>\n            )}\n            {/* Ahora debemos mapear currentPokemons */}\n            <div className={styles.grid}>\n              {currentPokemons?.map((pokemon) => {\n                return (\n                  <Card\n                    name={capitalizeString(pokemon.name)}\n                    img={pokemon.img}\n                    types={pokemon.types}\n                    key={pokemon.id}\n                    id={pokemon.id}\n                    create={pokemon.createInDb}\n                  />\n                );\n              })}\n            </div>\n          </div>\n        )}\n      </div>\n    </div>\n  );\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}