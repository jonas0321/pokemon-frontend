{"ast":null,"code":"import axios from \"axios\";\nexport const acciones = {\n  GET_POKEMONS: \"GET_POKEMONS\",\n  GET_ALL_TYPES: \"GET_ALL_TYPES\",\n  FILTER_CREATED: \"FILTER_CREATED\",\n  FILTER_NAME: \"ORDER_NAME\",\n  FILTER_TYPE: \"FILTER_TYPE\",\n  FILTER_STR: \"FILTER_STR\",\n  GET_POKEMON_NAME: \"GET_POKEMON_NAME\",\n  POST_POKEMON: \"POST_POKEMON\",\n  GET_DETAILS: \"GET_DETAILS\",\n  CLEAN_DETAIL: \"CLEAN_DETAIL\",\n  CLEAN_POKEMONS: \"CLEAN_POKEMONS\",\n  PAGINADO: \"PAGINADO\"\n};\nexport const getPokemons = () => {\n  return async dispatch => {\n    try {\n      let url = await axios.get(\"http://localhost:3001/pokemons\");\n      return dispatch({\n        type: acciones.GET_POKEMONS,\n        payload: url.data\n      });\n    } catch (err) {\n      console.log(err);\n    }\n  };\n};\nexport const getAllTypes = () => {\n  return async dispatch => {\n    try {\n      let url = await axios.get(\"http://localhost:3001/types\");\n      return dispatch({\n        type: acciones.GET_ALL_TYPES,\n        payload: url.data\n      });\n    } catch (err) {\n      console.log(err);\n    }\n  };\n};\nexport const getPokemonByName = name => {\n  return async dispatch => {\n    try {\n      let url = await axios.get(`http://localhost:3001/pokemons?name=${name}`);\n      return dispatch({\n        type: acciones.GET_POKEMON_NAME,\n        payload: url.data\n      });\n    } catch (err) {\n      alert(\"Pokemon not found\");\n      window.location.href = \"http://localhost:3000/home\";\n      console.log(err);\n    }\n  };\n};\nexport function getDetail(id) {\n  return async dispatch => {\n    try {\n      let url = await axios.get(`http://localhost:3001/pokemons/${id}`);\n      return dispatch({\n        type: acciones.GET_DETAILS,\n        payload: url.data\n      });\n    } catch (err) {\n      console.log(err);\n    }\n  };\n}\nexport const cleanPokemons = dispatch => {\n  return dispatch({\n    type: acciones.CLEAN_POKEMONS,\n    payload: []\n  });\n};\nexport const cleanDetalles = dispatch => {\n  return dispatch({\n    type: acciones.CLEAN_DETAIL,\n    payload: []\n  });\n};\nexport const filterCreated = payload => {\n  return {\n    type: acciones.FILTER_CREATED,\n    payload\n  };\n};\nexport const filterType = da => {\n  return {\n    type: acciones.FILTER_TYPE,\n    payload\n  };\n};\nexport const filterStr = payload => {\n  return {\n    type: acciones.FILTER_STR,\n    payload\n  };\n};\nexport const filterName = order => {\n  return {\n    type: acciones.FILTER_NAME,\n    payload: order\n  };\n};\nexport const postPokemon = payload => {\n  return async () => {\n    try {\n      let createPoke = await axios.post(\"http://localhost:3001/pokemons\", payload);\n      console.log(createPoke);\n      alert(\"New Pokemon is Created!\");\n      return createPoke;\n    } catch (err) {\n      alert(\"failed to create pokemon\");\n      console.log(err);\n    }\n  };\n};\nexport function paginado(numero) {\n  return dispatch => {\n    dispatch({\n      type: acciones.PAGINADO,\n      payload: numero\n    });\n  };\n}","map":{"version":3,"names":["axios","acciones","GET_POKEMONS","GET_ALL_TYPES","FILTER_CREATED","FILTER_NAME","FILTER_TYPE","FILTER_STR","GET_POKEMON_NAME","POST_POKEMON","GET_DETAILS","CLEAN_DETAIL","CLEAN_POKEMONS","PAGINADO","getPokemons","dispatch","url","get","type","payload","data","err","console","log","getAllTypes","getPokemonByName","name","alert","window","location","href","getDetail","id","cleanPokemons","cleanDetalles","filterCreated","filterType","da","filterStr","filterName","order","postPokemon","createPoke","post","paginado","numero"],"sources":["C:/Users/ADMIN/Downloads/PI-Pokemon-main/client/src/actions/index.js"],"sourcesContent":["import axios from \"axios\";\r\n\r\nexport const acciones = {\r\n  GET_POKEMONS: \"GET_POKEMONS\",\r\n  GET_ALL_TYPES: \"GET_ALL_TYPES\",\r\n  FILTER_CREATED: \"FILTER_CREATED\",\r\n  FILTER_NAME: \"ORDER_NAME\",\r\n  FILTER_TYPE: \"FILTER_TYPE\",\r\n  FILTER_STR: \"FILTER_STR\",\r\n  GET_POKEMON_NAME: \"GET_POKEMON_NAME\",\r\n  POST_POKEMON: \"POST_POKEMON\",\r\n  GET_DETAILS: \"GET_DETAILS\",\r\n  CLEAN_DETAIL: \"CLEAN_DETAIL\",\r\n  CLEAN_POKEMONS: \"CLEAN_POKEMONS\",\r\n  PAGINADO: \"PAGINADO\",\r\n};\r\n\r\nexport const getPokemons = () => {\r\n  return async (dispatch) => {\r\n    try {\r\n      let url = await axios.get(\"http://localhost:3001/pokemons\");\r\n      return dispatch({\r\n        type: acciones.GET_POKEMONS,\r\n        payload: url.data,\r\n      });\r\n    } catch (err) {\r\n      console.log(err);\r\n    }\r\n  };\r\n};\r\n\r\nexport const getAllTypes = () => {\r\n  return async (dispatch) => {\r\n    try {\r\n      let url = await axios.get(\"http://localhost:3001/types\");\r\n      return dispatch({\r\n        type: acciones.GET_ALL_TYPES,\r\n        payload: url.data,\r\n      });\r\n    } catch (err) {\r\n      console.log(err);\r\n    }\r\n  };\r\n};\r\n\r\nexport const getPokemonByName = (name) => {\r\n  return async (dispatch) => {\r\n    try {\r\n      let url = await axios.get(`http://localhost:3001/pokemons?name=${name}`);\r\n      return dispatch({\r\n        type: acciones.GET_POKEMON_NAME,\r\n        payload: url.data,\r\n      });\r\n    } catch (err) {\r\n      alert(\"Pokemon not found\");\r\n      window.location.href = \"http://localhost:3000/home\";\r\n      console.log(err);\r\n    }\r\n  };\r\n};\r\n\r\nexport function getDetail(id) {\r\n  return async (dispatch) => {\r\n    try {\r\n      let url = await axios.get(`http://localhost:3001/pokemons/${id}`);\r\n      return dispatch({\r\n        type: acciones.GET_DETAILS,\r\n        payload: url.data,\r\n      });\r\n    } catch (err) {\r\n      console.log(err);\r\n    }\r\n  };\r\n}\r\n\r\nexport const cleanPokemons = (dispatch) => {\r\n  return dispatch({\r\n    type: acciones.CLEAN_POKEMONS,\r\n    payload: [],\r\n  });\r\n};\r\n\r\nexport const cleanDetalles = (dispatch) => {\r\n  return dispatch({\r\n    type: acciones.CLEAN_DETAIL,\r\n    payload: [],\r\n  });\r\n};\r\n\r\nexport const filterCreated = (payload) => {\r\n  return {\r\n    type: acciones.FILTER_CREATED,\r\n    payload,\r\n  };\r\n};\r\n\r\nexport const filterType = (da) => {\r\n  return {\r\n    type: acciones.FILTER_TYPE,\r\n    payload,\r\n  };\r\n};\r\n\r\nexport const filterStr = (payload) => {\r\n  return {\r\n    type: acciones.FILTER_STR,\r\n    payload,\r\n  };\r\n};\r\n\r\nexport const filterName = (order) => {\r\n  return {\r\n    type: acciones.FILTER_NAME,\r\n    payload:order\r\n  };\r\n};\r\n\r\nexport const postPokemon = (payload) => {\r\n  return async () => {\r\n    try {\r\n      let createPoke = await axios.post(\r\n        \"http://localhost:3001/pokemons\",\r\n        payload\r\n      );\r\n      console.log(createPoke);\r\n      alert(\"New Pokemon is Created!\");\r\n      return createPoke;\r\n    } catch (err) {\r\n      alert(\"failed to create pokemon\");\r\n      console.log(err);\r\n    }\r\n  };\r\n};\r\n\r\nexport function paginado(numero) {\r\n  return (dispatch) => {\r\n    dispatch({ type: acciones.PAGINADO, payload: numero });\r\n  };\r\n}"],"mappings":"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"},"metadata":{},"sourceType":"module"}